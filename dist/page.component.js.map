{"version":3,"file":"page.component.js","sourceRoot":"","sources":["../src/page.component.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,aAAa,CAAC;AAC7D,OAAO,EAAE,IAAI,EAAE,MAAM,mBAAmB,CAAC;AACzC,OAAO,UAAU,MAAM,eAAe,CAAC;AACvC,OAAO,QAAQ,MAAM,iBAAiB,CAAC;AAGvC,IAAa,IAAI,GAAjB,MAAa,IAAK,SAAQ,IAAI;IAA9B;;QAG8B,UAAK,GAAG,EAAE,CAAC;QACX,gBAAW,GAAG,EAAE,CAAC;QAChB,aAAQ,GAAG,KAAK,CAAC;IAyBhD,CAAC;IAtBW,QAAQ;QAChB,OAAQ,IAAI,CAAC,IAAwB;aAClC,aAAa,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;aAChC,MAAM,CAAC,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC,CAAC,YAAY,IAAI,CAAC,CAAkB,CAAC;IAC9D,CAAC;IAED,kBAAkB;QAChB,IAAI,IAAI,CAAC,IAAI,EAAE;YACb,IAAI,UAAU,GAAG,IAAI,WAAW,CAAC,WAAW,EAAE;gBAC5C,MAAM,EAAE;oBACN,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE;iBACvB;gBACD,OAAO,EAAE,IAAI;gBACb,QAAQ,EAAE,IAAI;aACf,CAAC,CAAC;YACH,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;SAChC;IACH,CAAC;IAES,MAAM;QACd,OAAO,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;CACF,CAAA;AA7Be,oBAAe,GAAG,CAAC,UAAU,CAAC,CAAC;AAEjB;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;mCAAY;AACX;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;yCAAkB;AAChB;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;sCAAkB;AAC/B;IAAd,KAAK,CAAC,MAAM,CAAC;8BAAgB,WAAW;kCAAC;AAN/B,IAAI;IADhB,aAAa,CAAC,SAAS,CAAC;GACZ,IAAI,CA8BhB;SA9BY,IAAI","sourcesContent":["import { customElement, property, query } from 'lit-element';\r\nimport { Base } from '@spectrum/sp-base';\r\nimport pageStyles from './page.styles';\r\nimport template from './page.template';\r\n\r\n@customElement('sp-page')\r\nexport class Page extends Base {\r\n  public static componentStyles = [pageStyles];\r\n\r\n  @property({ type: String }) width = \"\";\r\n  @property({ type: String }) buttonLabel = \"\";\r\n  @property({ type: Boolean }) noButton = false;\r\n  @query('slot') private slot!: HTMLElement;\r\n\r\n  protected getItems(): Text[] {\r\n    return (this.slot as HTMLSlotElement)\r\n      .assignedNodes({ flatten: true })\r\n      .filter((e: any) => (e instanceof Text)) as any as Text[];\r\n  }\r\n\r\n  _handleButtonClick() {\r\n    if (this.slot) {\r\n      let clickEvent = new CustomEvent('pageclick', {\r\n        detail: {\r\n          texts: this.getItems()\r\n        },\r\n        bubbles: true,\r\n        composed: true\r\n      });\r\n      this.dispatchEvent(clickEvent);\r\n    }\r\n  }\r\n\r\n  protected render() {\r\n    return template.call(this);\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'sp-page': Page;\r\n  }\r\n}\r\n"]}